{"version":3,"sources":["redux/actions/userActions.js","redux/reducers/userReducer.js","redux/actions/expensesActions.js","redux/reducers/expensesReducer.js","redux/actions/categoriesActions.js","redux/reducers/categoriesReducer.js","redux/store.js","utils/validators.js","lib/request.js","components/OwnInput.js","components/User/Signin.js","api/user.js","components/Expense/chart.js","components/Navigation.js","components/PageWrapper.js","components/Expense/AllExpenses.js","api/expense.js","api/category.js","components/OwnComboBox.js","components/OwnDatePicker.js","components/Expense/CreateExpense.js","components/Category/CreateCategory.js","components/Category/AllCategories.js","components/User/Signup.js","App.js","serviceWorker.js","index.js"],"names":["fetchUser","createAction","userReducer","handleActions","state","payload","data","AddExpense","GetExpensesStart","GetExpensesEnd","GetExpensesError","DeleteExpenseSuccess","DeleteExpenseError","initialState","isFetching","error","expensesReducer","action","filter","_id","insertCategory","GetCategoriesStart","GetCategoriesEnd","GetCategoriesError","DeleteCategorySuccess","DeleteCategoryError","categoriesReducer","name","rootReducer","combineReducers","form","formReducer","user","expenses","categories","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","required","value","undefined","minLength","length","minLength5","minLength2","config","require","request","url","method","token","localStorage","getItem","headers","Authorization","axios","apiUrl","then","catch","err","console","log","Promise","reject","ownInput","props","input","meta","rest","valid","touched","Form","Control","isInvalid","Feedback","type","LoginForm","reduxForm","initialValues","username","password","handleSubmit","pristine","submitting","history","userData","onSubmit","login","setItem","JSON","stringify","push","Label","Group","controlId","Field","component","OwnInput","placeholder","validate","Button","variant","disabled","connect","uv","pv","amt","uvError","ChartPage","width","height","margin","top","right","left","bottom","dataKey","stroke","yAxisId","Nav","defaultActiveKey","as","Item","Link","onClick","children","useHistory","Navigation","Fragment","AllExpenses","handleDelete","bind","this","result","e","id","target","PageWrapper","className","InputGroup","to","style","marginLeft","map","expense","Card","key","Body","Text","amount","description","React","Component","store","getCategories","category","DatePicker","focused","onFocusChange","setState","onFocus","showClearDate","showDefaultInputIcon","displayFormat","numberOfMonths","date","onDateChange","onChange","color","PureComponent","formatDates","moment","normalizeDates","format","CreateExpenseForm","expensesData","useState","categoriesList","setCategoriesList","useEffect","res","owner","newExpense","OwnComboBox","parse","CreateCategoryForm","addCategory","AllCategories","location","reload","SingInForm","register","App","exact","path","SimpleForm","SingUpForm","CreateExpense","CreateCategory","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1236923.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\nconst FETCH_USER = \"FETCH_USER\";\n\nconst fetchUser = createAction(FETCH_USER);\n\nexport { fetchUser };","// import { get } from 'lodash'\nimport { handleActions } from \"redux-actions\";\nimport { fetchUser } from \"../actions/userActions\";\n\nconst initialState = {\n  data: null\n};\n\nconst userReducer = handleActions(\n  {\n    [fetchUser]: (state, { payload }) => {\n      return {\n        ...state,\n        data: payload\n      };\n    }\n  },\n  initialState\n);\n\nexport default userReducer;\n","import { createAction } from 'redux-actions'\nconst ADD_EXPENSE = 'ADD_EXPENSE'\nconst GET_EXPENSES_START = 'GET_EXPENSES_START'\nconst GET_EXPENSES_END = 'GET_EXPENSES_END'\nconst GET_EXPENSES_ERROR = 'GET_EXPENSES_ERROR'\nconst DELETE_EXPENSE_SUCCESS = 'DELETE_EXPENSE_SUCCESS'\nconst DELETE_EXPENSE_ERROR = 'DELETE_EXPENSE_ERROR'\n\nconst AddExpense = createAction(ADD_EXPENSE)\nconst GetExpensesStart= createAction(GET_EXPENSES_START)\nconst GetExpensesEnd = createAction(GET_EXPENSES_END)\nconst GetExpensesError = createAction(GET_EXPENSES_ERROR)\nconst DeleteExpenseSuccess = createAction(DELETE_EXPENSE_SUCCESS)\nconst DeleteExpenseError = createAction(DELETE_EXPENSE_ERROR)\n\n\nexport { AddExpense, GetExpensesStart, GetExpensesEnd, GetExpensesError, DeleteExpenseSuccess, DeleteExpenseError}","// import { get } from 'lodash'\nimport { handleActions } from \"redux-actions\";\nimport {\n  AddExpense,\n  GetExpensesStart,\n  GetExpensesEnd,\n  GetExpensesError,\n  DeleteExpenseSuccess,\n  DeleteExpenseError,\n\n} from \"../actions/expensesActions\";\n\nconst initialState = {\n  isFetching: false,\n  data: null,\n  error: ''\n};\n\nconst expensesReducer = handleActions(\n  {\n    [AddExpense]: (state = initialState, action) => {\n      return {\n        ...state,\n        data: [action.payload, ...state.data]\n      };\n    },\n    [GetExpensesStart]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: true\n      };\n    },\n    [GetExpensesEnd]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: false,\n        data: action.payload\n      };\n    },\n    [GetExpensesError]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      }\n    },\n    [DeleteExpenseSuccess]: (state = initialState, action) => {\n      return {\n        ...state,\n        data: state.data.filter(({ _id }) => _id !== action.payload)\n      };\n    },\n    [DeleteExpenseError]: (state = initialState, action) => {\n      return {\n        ...state,\n        error: action.payload,\n      }\n    },\n  },\n  initialState\n);\n\nexport default expensesReducer;\n","import { createAction } from 'redux-actions'\nconst SAVE_CATEGORY = 'SAVE_CATEGORY'\nconst GET_CATEGORIES_START = 'GET_CATEGORIES_START'\nconst GET_CATEGORIES_END = 'GET_CATEGORIES_END'\nconst GET_CATEGORIES_ERROR = 'GET_CATEGORIES_ERROR'\nconst DELETE_CATEGORY_SUCCESS = 'DELETE_CATEGORY_SUCCESS'\nconst DELETE_CATEGORY_ERROR = 'DELETE_CATEGORY_ERROR'\n\nconst insertCategory = createAction(SAVE_CATEGORY)\nconst GetCategoriesStart = createAction(GET_CATEGORIES_START)\nconst GetCategoriesEnd = createAction(GET_CATEGORIES_END)\nconst GetCategoriesError = createAction(GET_CATEGORIES_ERROR)\nconst DeleteCategorySuccess= createAction(DELETE_CATEGORY_SUCCESS)\nconst DeleteCategoryError= createAction(DELETE_CATEGORY_ERROR)\n\nexport { insertCategory, GetCategoriesStart, GetCategoriesEnd, GetCategoriesError, DeleteCategorySuccess, DeleteCategoryError}","import { handleActions } from \"redux-actions\";\nimport {\n  insertCategory,\n  GetCategoriesStart,\n  GetCategoriesEnd,\n  GetCategoriesError,\n  DeleteCategorySuccess,\n  DeleteCategoryError\n} from \"../actions/categoriesActions\";\n\nconst initialState = {\n  data: [],\n  isFetching: false,\n};\n\nconst categoriesReducer = handleActions(\n  {\n    [insertCategory]: (state = initialState, action) => {\n      return {\n        ...state,\n        data: [...state.data, { name: action.payload }]\n      };\n    },\n    [GetCategoriesStart]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: true\n      };\n    },\n    [GetCategoriesEnd]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: false,\n        data: action.payload\n      };\n    },\n    [GetCategoriesError]: (state = initialState, action) => {\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      }\n    },\n    [DeleteCategorySuccess]: (state = initialState, action) => {\n      return {\n        ...state,\n        data: state.data.filter(({ _id }) => _id !== action.payload)\n      };\n    },\n    [DeleteCategoryError]: (state = initialState, action) => {\n      return {\n        ...state,\n        error: action.payload,\n      }\n    },\n  },\n  initialState\n);\n\nexport default categoriesReducer;\n","import { combineReducers, createStore } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\nimport user from './reducers/userReducer'\nimport expenses from './reducers/expensesReducer'\nimport categories from './reducers/categoriesReducer'\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  user,\n  expenses,\n  categories,\n})\nexport default createStore(\n  rootReducer,\n  {},\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n","const required = (value) => (value ? undefined : 'Required')\n\nconst minLength = (minLength) => (value) =>\n  value && value.length < minLength ? `Must be at least ${minLength} symbols` : undefined\n\nconst minLength5 = minLength(5)\nconst minLength2 = minLength(2)\nconst email = (value) =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\n\nexport { required, email, minLength5,  minLength2}\n","import axios from 'axios'\nconst config = require('../config.json')\n\nconst request = ({ url, method = 'get', data = {} }) => {\n  const token = localStorage.getItem('token')\n  let headers = {}\n  if (token) {\n    headers = { ...headers, Authorization: `Bearer ${token}` }\n  }\n\n  return axios({\n    url: `${config.apiUrl}${url}`,\n    method,\n    data,\n    headers,\n  })\n    .then(({ data }) => data)\n    .catch((err) => {\n      console.log(err)\n      return Promise.reject(err)\n    })\n}\n\nexport default request","import { Form } from 'react-bootstrap'\nimport React from 'react'\n\nconst ownInput = (props) => {\n\tconst { input, meta, ...rest } = props\n\tconst { valid, error, touched } = meta\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Control {...input} {...rest} isInvalid={touched && !valid} />\n\t\t\t{touched && error && (\n\t\t\t\t<Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default ownInput\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport { required, minLength5 } from \"../../utils/validators\";\nimport { fetchUser } from \"../../redux/actions/userActions\";\nimport { login } from \"../../api/user\";\n\nimport OwnInput from \"../OwnInput\";\n\nconst SimpleForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  fetchUser,\n  userData,\n  history\n}) => {\n  const sendToServer = ({ username, password }) => {\n    login({ username, password })\n      .then(({ token, user }) => {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"user\", JSON.stringify(user));\n\n        fetchUser(user);\n      })\n      .then(() => {\n        history.push(\"/expenses\");\n      });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(sendToServer)}>\n      <Form.Label>Sign In</Form.Label>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email</Form.Label>\n        <Field\n          name=\"username\"\n          component={OwnInput}\n          type=\"text\"\n          placeholder=\"Username\"\n          validate={[required]}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Field\n          name=\"password\"\n          component={OwnInput}\n          type=\"password\"\n          placeholder=\"Password\"\n          validate={[required, minLength5]}\n        />\n      </Form.Group>\n\n      <div>\n        <Button\n          variant={pristine ? \"danger\" : \"success\"}\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nconst LoginForm = reduxForm({\n  form: \"simple\", // a unique identifier for this form\n  initialValues: {\n    username: \"\",\n    password: \"\"\n  }\n})(SimpleForm);\n\nexport default connect(({ user: { data } }) => ({ userData: data }), {\n  fetchUser\n})(LoginForm);\n","import request from \"../lib/request\";\n\nexport const login = ({ username, password }) => {\n  return request({\n    url: \"/login\",\n    method: \"post\",\n    data: { username, password }\n  });\n};\n\nexport const register = ({ username, password }) => {\n  return request({\n    url: '/register',\n    method: 'post',\n    data: { username, password },\n  })\n}\n\nexport const getProtected = () => {\n  return request({ url: \"/api/profile\", method: \"get\" });\n};\n","import React from 'react'\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line } from 'recharts'\n\nconst data = [\n    { name: 'Page A', uv: 1000, pv: 2400, amt: 2400, uvError: [75, 20] },\n    { name: 'Page B', uv: 300, pv: 4567, amt: 2400, uvError: [90, 40] },\n    { name: 'Page C', uv: 280, pv: 1398, amt: 2400, uvError: 40 },\n    { name: 'Page D', uv: 200, pv: 9800, amt: 2400, uvError: 20 },\n    { name: 'Page E', uv: 278, pv: null, amt: 2400, uvError: 28 },\n    { name: 'Page F', uv: 189, pv: 4800, amt: 2400, uvError: [90, 20] },\n    { name: 'Page G', uv: 189, pv: 4800, amt: 2400, uvError: [28, 40] },\n    { name: 'Page H', uv: 189, pv: 4800, amt: 2400, uvError: 28 },\n    { name: 'Page I', uv: 189, pv: 4800, amt: 2400, uvError: 28 },\n    { name: 'Page J', uv: 189, pv: 4800, amt: 2400, uvError: [15, 60] },\n  ];\n  \n\nconst ChartPage = () => {\n    return (<LineChart\n        width={400}\n        height={400}\n        data={data}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n      >\n        <XAxis dataKey=\"name\" />\n        <Tooltip />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" yAxisId={0} />\n        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#387908\" yAxisId={1} />\n      </LineChart>)\n}\n\nexport default ChartPage","import React from 'react'\nimport { Nav } from 'react-bootstrap'\n//import { Link } from \"react-router-dom\";\n\nexport default ({ history }) => {\n\n  const navigateToCategories = () => {\n    history.push('/categories')\n  }\n  const navigateToExpenses = () => {\n    history.push('/expenses')\n  }\n\n  const navigateToLogin = () => {\n    history.push('/login')\n  }\n\n  return (\n    <Nav defaultActiveKey=\"/home\" as=\"ul\">\n      <Nav.Item as=\"li\">\n        <Nav.Link onClick={navigateToCategories}>Categories</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link onClick={navigateToExpenses}>Expenses</Nav.Link>\n      </Nav.Item>\n      <Nav.Item as=\"li\">\n        <Nav.Link onClick={navigateToLogin}>Login</Nav.Link>\n      </Nav.Item>\n    </Nav>\n  )\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Navigation from './Navigation'\n\nexport default ({ children }) => {\n  let history = useHistory()\n\n  return (\n    <div>\n      <Navigation history={history} />\n      <React.Fragment>{children}</React.Fragment>\n    </div>\n  )\n}","import React from \"react\";\nimport { Button, Card, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ChartPage from './chart'\n\nimport PageWrapper from \"../../components/PageWrapper\";\n\nimport {\n  GetExpensesStart,\n  GetExpensesEnd,\n  GetExpensesError,\n  DeleteExpenseSuccess,\n  DeleteExpenseError\n} from \"../../redux/actions/expensesActions\";\nimport { getExpenses, deleteExpense } from \"../../api/expense\";\n\nclass AllExpenses extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    const { GetExpensesStart, GetExpensesEnd, GetExpensesError } = this.props;\n\n    GetExpensesStart();\n    getExpenses()\n      .then(result => {\n        GetExpensesEnd(result);\n      })\n      .catch(err => {\n        GetExpensesError(err);\n        console.log(err);\n      });\n  }\n\n  handleDelete(e) {\n    const id = e.target.value;\n\n    deleteExpense(id)\n      .then(result => {\n        this.props.DeleteExpenseSuccess(result._id);\n      })\n      .catch(err => {\n        DeleteExpenseError(err);\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <ChartPage />\n        <PageWrapper />\n        <div className=\"row\">\n          <div className=\"container\">\n            <InputGroup>\n              <Link to=\"/expenses/create\">\n                <Button>New expense</Button>\n              </Link>\n\n              <Link to=\"/categories/create\" style={{ marginLeft: \"10px\" }}>\n                <Button>New category</Button>\n              </Link>\n            </InputGroup>\n            <hr></hr>\n            {this.props.expenses &&\n              this.props.expenses.map(expense => (\n                <Card key={expense._id}>\n                  <Card.Body>\n                    <Card.Text>{expense.amount} гривень </Card.Text>\n                    <Card.Text>{expense.description}</Card.Text>\n                    <Button\n                      variant=\"danger\"\n                      value={expense._id}\n                      onClick={this.handleDelete}\n                    >\n                      Delete\n                    </Button>\n                  </Card.Body>\n                </Card>\n              ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    expenses: store.expenses.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  GetExpensesStart,\n  GetExpensesEnd,\n  GetExpensesError,\n  DeleteExpenseSuccess,\n  DeleteExpenseError\n})(AllExpenses);\n","import request from \"../lib/request\";\n\nexport const newExpense = ({ amount, category, description, date, owner }) => {\n  return request({\n    url: \"/expenses/create\",\n    method: \"post\",\n    data: { amount, category, description, date, owner }\n  });\n};\n\nexport const getExpenses = () => {\n  return request({\n    url: \"/expenses\",\n    method: \"get\"\n  });\n};\n\nexport const deleteExpense = _id => {\n  return request({\n    url: `/expenses/delete/${_id}`,\n    method: \"get\"\n  });\n};\n","import request from \"../lib/request\";\n\nexport const addCategory = name => {\n  return request({\n    url: \"/categories/create\",\n    method: \"post\",\n    data: { name }\n  });\n};\n\nexport const getCategories = () => {\n  return request({\n    url: \"/categories\",\n    method: \"get\"\n  });\n};\n\nexport const deleteCategory = _id => {\n  return request({\n    url: `/categories/delete/${_id}`,\n    method: \"get\"\n  });\n};\n","import { Form } from 'react-bootstrap'\nimport React from 'react'\n\nconst ownInput = (props) => {\n  const { input, meta, categories, ...rest } = props\n  const { valid, error, touched } = meta\n\n  return (\n    <>\n      <Form.Control {...input} {...rest} as='select' isInvalid={touched && !valid}>\n        <option></option>\n        {categories &&\n          categories.map((category) => (\n            <option key={category._id} value={category._id}>\n              {category.name}\n            </option>\n          ))}\n      </Form.Control>\n      {touched && error && <Form.Control.Feedback type='invalid'>{error}</Form.Control.Feedback>}\n    </>\n  )\n}\n\nexport default ownInput","import React, { PureComponent } from 'react'\nimport 'react-dates/initialize'\nimport 'react-dates/lib/css/_datepicker.css'\nimport { SingleDatePicker } from 'react-dates'\nimport moment from 'moment'\n\nclass DatePicker extends PureComponent {\n\tstate = {\n\t\tfocused: false,\n\t}\n\n\tonFocusChange = (value) => {\n\t\tthis.setState({ focused: !this.state.focused })\n\t\tconst { input } = this.props\n\t\tinput.onFocus(value)\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinput,\n\t\t\tmeta: { touched, error },\n\t\t\tplaceholder,\n\t\t\tdisabled,\n\t\t} = this.props\n\t\tconst { focused } = this.state\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<SingleDatePicker\n\t\t\t\t\tshowClearDate={true}\n\t\t\t\t\tshowDefaultInputIcon={true}\n\t\t\t\t\tdisplayFormat='YYYY-MM-DD'\n\t\t\t\t\tnumberOfMonths={1}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdate={input.value}\n\t\t\t\t\tonDateChange={input.onChange}\n\t\t\t\t\tfocused={focused}\n\t\t\t\t\tonFocusChange={this.onFocusChange}\n\t\t\t\t\tid={input.name}\n\t\t\t\t\trequired={true}\n\t\t\t\t/>\n\t\t\t\t{touched && error && <div style={{ color: 'red' }}>{error}</div>}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport const formatDates = (value) => (value ? moment(value) : null)\n\nexport const normalizeDates = (value) =>\n\tvalue ? value.format('YYYY-MM-DD') : null\n\nexport default DatePicker\n","import React, { useEffect, useState } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { required, date } from \"redux-form-validators\";\n\nimport { connect } from \"react-redux\";\nimport { AddExpense } from \"../../redux/actions/expensesActions\";\n\nimport { newExpense } from \"../../api/expense\";\nimport { getCategories } from \"../../api/category\";\nimport OwnInput from \"../OwnInput\";\nimport OwnComboBox from \"../OwnComboBox\";\nimport DatePicker, { formatDates, normalizeDates } from \"../OwnDatePicker\";\n\nconst CreateExpense = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  AddExpense,\n  expensesData,\n  history\n}) => {\n  const [categoriesList, setCategoriesList] = useState([]);\n\n  const sendToServer = ({ amount, category, date, description }) => {\n    const { _id } = localStorage.getItem(\"user\");\n    newExpense({ amount, category, description, date, owner: _id })\n      .then(result => {\n        AddExpense(result);\n        history.push(\"/expenses\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getCategories().then(res => {\n      setCategoriesList(res);\n    });\n  }, []);\n\n  return (\n    <Form onSubmit={handleSubmit(sendToServer)}>\n      <Form.Group controlId=\"formBasicAmount\">\n        <Form.Label>Amount</Form.Label>\n        <Field\n          name=\"amount\"\n          component={OwnInput}\n          type=\"text\"\n          placeholder=\"Amount...\"\n          validate={[required()]}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicCategory\">\n        <Form.Label>Category</Form.Label>\n        <Field\n          name=\"category\"\n          component={OwnComboBox}\n          validate={[required()]}\n          categories={categoriesList}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicDescription\">\n        <Form.Label>Description</Form.Label>\n        <Field\n          name=\"description\"\n          component={OwnInput}\n          type=\"text\"\n          placeholder=\"Description...\"\n          validate={[required()]}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicDate\">\n        <Form.Label>Date</Form.Label>\n        <Field\n          name={\"date\"}\n          component={DatePicker}\n          placeholder=\"Date...\"\n          parse={normalizeDates}\n          format={formatDates}\n          validate={[required(), date()]}\n        />\n      </Form.Group>\n\n      <div>\n        <Button\n          variant={pristine ? \"danger\" : \"success\"}\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nconst CreateExpenseForm = reduxForm({\n  form: \"expense\"\n})(CreateExpense);\n\nconst mapStateToProps = store => {\n  return {\n    expensesData: store.expenses.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  AddExpense\n})(CreateExpenseForm);\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport OwnInput from \"../OwnInput\";\nimport { required, minLength2 } from \"../../utils/validators\";\n\nimport { insertCategory } from \"../../redux/actions/categoriesActions\";\nimport { addCategory } from \"../../api/category\";\n\nconst CategoryForm = ({\n  handleSubmit,\n  pristine,\n  submitting,\n  insertCategory,\n  history\n}) => {\n  const sendToServer = ({ name }) => {\n    addCategory(name).then(({ category }) => {\n      localStorage.setItem(\"category\", category);\n      insertCategory(category);\n      history.push(\"/categories\");\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(sendToServer)}>\n      <Form.Group controlId=\"categoryName\">\n        <Form.Label>Сategory name:</Form.Label>\n        <Field\n          name=\"name\"\n          component={OwnInput}\n          type=\"text\"\n          placeholder=\"name of category...\"\n          validate={[required, minLength2]}\n        ></Field>\n      </Form.Group>\n\n      <div>\n        <Button\n          variant={pristine ? \"danger\" : \"success\"}\n          type=\"submit\"\n          disabled={submitting}\n        >\n          Submit\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nconst CreateCategoryForm = reduxForm({\n  form: \"category\",\n  initialValues: {\n    name: \"\"\n  }\n})(CategoryForm);\n\nconst mapStateToProps = store => {\n  return {\n    categories: store.categories.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  insertCategory\n})(CreateCategoryForm);\n","import React from \"react\";\nimport { Button, Card, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport PageWrapper from '../../components/PageWrapper'\n\nimport {\n  GetCategoriesStart,\n  GetCategoriesEnd,\n  GetCategoriesError,\n  DeleteCategorySuccess,\n  DeleteCategoryError\n} from \"../../redux/actions/categoriesActions\";\nimport { getCategories, deleteCategory } from \"../../api/category\";\n\nclass AllCategories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    const { GetCategoriesStart, GetCategoriesEnd, GetCategoriesError } = this.props;\n\n    GetCategoriesStart();\n    getCategories()\n      .then(result => {\n        GetCategoriesEnd(result);\n      })\n      .catch(err => {\n        GetCategoriesError(err)\n        console.log(err);\n      });\n  }\n\n  handleDelete(e) {\n    const id = e.target.value;\n\n    deleteCategory(id).then(result => {\n      this.props.DeleteCategorySuccess(result._id);\n    }).catch(err => {\n      DeleteCategoryError(err)\n      console.log(err);\n    });\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <>\n        <PageWrapper />\n      <div className=\"row\">\n        <div className=\"container\">\n          <InputGroup>\n            <Link to=\"/categories/create\">\n              <Button>New category</Button>\n            </Link>\n            <Link to=\"/expenses\" style={{ marginLeft: '10px' }}>\n              <Button>Return to expenses</Button>\n            </Link>\n          </InputGroup>\n          <hr></hr>\n          {this.props.categories &&\n            this.props.categories.map(category => (\n              <Card key={category._id}>\n                <Card.Body>\n                  <Card.Text>{category.name} </Card.Text>\n                  <Button\n                    variant=\"danger\"\n                    value={category._id}\n                    onClick={this.handleDelete}\n                  >\n                    Delete\n                  </Button>\n                </Card.Body>\n              </Card>\n            ))}\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    categories: store.categories.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  GetCategoriesStart,\n  GetCategoriesEnd,\n  GetCategoriesError,\n  DeleteCategorySuccess,\n  DeleteCategoryError\n})(AllCategories);\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\n\nimport { required, minLength5 } from '../../utils/validators'\nimport { fetchUser } from '../../redux/actions/userActions'\nimport { register } from '../../api/user'\n\nimport OwnInput from '../OwnInput'\n\nconst SimpleForm = ({ handleSubmit, pristine, submitting, fetchUser, history }) => {\n  const sendToServer = ({ username, password }) => {\n    register({ username, password })\n      .then(({ user, token }) => {\n        localStorage.setItem('token', token)\n        localStorage.setItem('user', JSON.stringify(user))\n\n        fetchUser(user)\n      })\n      .then(() => {\n        history.push('/expenses')\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(sendToServer)}>\n        <Form.Label>Sign Up</Form.Label>\n      <Form.Group controlId='formBasicEmail'>\n        <Form.Label>Username</Form.Label>\n        <Field name='username' component={OwnInput} type='text' placeholder='Username' validate={[required]} />\n      </Form.Group>\n\n      <Form.Group controlId='formBasicPassword'>\n        <Form.Label>Password</Form.Label>\n        <Field\n          name='password'\n          component={OwnInput}\n          type='password'\n          placeholder='Password'\n          validate={[required, minLength5]}\n        />\n      </Form.Group>\n\n      <div>\n        <Button variant={pristine ? 'danger' : 'success'} type='submit' disabled={submitting}>\n          Submit\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nconst SingInForm = reduxForm({\n  form: 'simple',\n})(SimpleForm)\n\nexport default connect(null, {\n    fetchUser,\n})(SingInForm)","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport SimpleForm from './components/User/Signin'\nimport AllExpenses from './components/Expense/AllExpenses'\nimport CreateExpense from './components/Expense/CreateExpense'\nimport CreateCategory from './components/Category/CreateCategory'\nimport AllCategories from './components/Category/AllCategories'\nimport SingUpForm from './components/User/Signup'\n//import Loader from './components/Loader'\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t{/* <Loader /> */}\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/login' component={SimpleForm} />\n\t\t\t\t\t\t<Route exact path='/register' component={SingUpForm} />\n\t\t\t\t\t\t<Route exact path='/expenses' component={AllExpenses} />\n\t\t\t\t\t\t<Route exact path='/expenses/create' component={CreateExpense} />\n\t\t\t\t\t\t<Route exact path=\"/categories\" component={AllCategories} />\n\t\t\t\t\t\t<Route exact path=\"/categories/create\" component={CreateCategory} />\n            \t\t\t<Route path='/' component={SimpleForm} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import { render } from 'react-dom';\n//import {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}